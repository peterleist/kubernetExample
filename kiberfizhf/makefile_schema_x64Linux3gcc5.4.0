######################################################################
# makefile_schema_x64Linux3gcc5.4.0#
# (c) Copyright, Real-Time Innovations, 2012.  All rights reserved.
# RTI grants Licensee a license to use, modify, compile, and create
# derivative works of the software solely for use with RTI Connext DDS.
# Licensee may redistribute copies of the software provided that all such
# copies are subject to this license. The software is provided "as is",
# with no warranty of any type, including any warranty for fitness for
# any purpose. RTI is under no obligation to maintain or support the
# software. RTI shall not be liable for any incidental or consequential
# damages arising out of the use or inability to use the software.
#
#
# This makefile was automatically generated by rtiddsgen.
#
#
# Note: This makefile is only meant to build our example applications and
#       may require alterations to build on your system.
#
# Make sure that javac and java are in your path.
######################################################################

SOURCE_DIR = 

TARGET_ARCH=x64Linux3gcc5.4.0

# If undefined in the environment default NDDSHOME to install dir
ifndef NDDSHOME
NDDSHOME := /home/cps/rti_connext_dds-6.0.1
endif

JAVA_PATH = java
JAVAC_PATH = javac

JAVA_SOURCES = $(SOURCE_DIR)./hu/bme/mit/cps/smartuniversity/Adjustment.java $(SOURCE_DIR)./hu/bme/mit/cps/smartuniversity/AdjustmentSeq.java $(SOURCE_DIR)./hu/bme/mit/cps/smartuniversity/AdjustmentTypeSupport.java $(SOURCE_DIR)./hu/bme/mit/cps/smartuniversity/AdjustmentTypeCode.java $(SOURCE_DIR)./hu/bme/mit/cps/smartuniversity/AdjustmentDataReader.java $(SOURCE_DIR)./hu/bme/mit/cps/smartuniversity/AdjustmentDataWriter.java $(SOURCE_DIR)./hu/bme/mit/cps/smartuniversity/Temperature.java $(SOURCE_DIR)./hu/bme/mit/cps/smartuniversity/TemperatureSeq.java $(SOURCE_DIR)./hu/bme/mit/cps/smartuniversity/TemperatureTypeSupport.java $(SOURCE_DIR)./hu/bme/mit/cps/smartuniversity/TemperatureTypeCode.java $(SOURCE_DIR)./hu/bme/mit/cps/smartuniversity/TemperatureDataReader.java $(SOURCE_DIR)./hu/bme/mit/cps/smartuniversity/TemperatureDataWriter.java $(SOURCE_DIR)./hu/bme/mit/cps/smartuniversity/Entry.java $(SOURCE_DIR)./hu/bme/mit/cps/smartuniversity/EntrySeq.java $(SOURCE_DIR)./hu/bme/mit/cps/smartuniversity/EntryTypeSupport.java $(SOURCE_DIR)./hu/bme/mit/cps/smartuniversity/EntryTypeCode.java $(SOURCE_DIR)./hu/bme/mit/cps/smartuniversity/EntryDataReader.java $(SOURCE_DIR)./hu/bme/mit/cps/smartuniversity/EntryDataWriter.java $(SOURCE_DIR)./hu/bme/mit/cps/smartuniversity/EntrySubscriber.java $(SOURCE_DIR)./hu/bme/mit/cps/smartuniversity/EntryPublisher.java
CLASS_FILES  = $(JAVA_SOURCES:%.java=%.class)

RTI_CLASSPATH := $(NDDSHOME)/lib/java/nddsjava.jar

%.class : %.java
	$(JAVAC_PATH)  -classpath ".:$(RTI_CLASSPATH)" $<

all: $(CLASS_FILES)
 
#
# Convenient way to run the java programs
#

export LD_LIBRARY_PATH := $(NDDSHOME)/lib/x64Linux3gcc5.4.0:/usr/lib/lwp:$(LD_LIBRARY_PATH)

EntryPublisher: ./hu/bme/mit/cps/smartuniversity/EntryPublisher.class
	$(JAVA_PATH) -d64 -classpath ".:$(RTI_CLASSPATH)" hu.bme.mit.cps.smartuniversity.EntryPublisher $(ARGS)
 
EntrySubscriber: ./hu/bme/mit/cps/smartuniversity/EntrySubscriber.class
	$(JAVA_PATH) -d64 -classpath ".:$(RTI_CLASSPATH)" hu.bme.mit.cps.smartuniversity.EntrySubscriber $(ARGS)
