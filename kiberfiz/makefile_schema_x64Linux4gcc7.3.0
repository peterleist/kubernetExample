######################################################################
# makefile_schema_x64Linux4gcc7.3.0#
# (c) Copyright, Real-Time Innovations, 2012.  All rights reserved.
# RTI grants Licensee a license to use, modify, compile, and create
# derivative works of the software solely for use with RTI Connext DDS.
# Licensee may redistribute copies of the software provided that all such
# copies are subject to this license. The software is provided "as is",
# with no warranty of any type, including any warranty for fitness for
# any purpose. RTI is under no obligation to maintain or support the
# software. RTI shall not be liable for any incidental or consequential
# damages arising out of the use or inability to use the software.
#
#
# This makefile was automatically generated by rtiddsgen.
#
#
# Note: This makefile is only meant to build our example applications and
#       may require alterations to build on your system.
#
# Make sure that javac and java are in your path.
######################################################################

SOURCE_DIR = 

TARGET_ARCH=x64Linux4gcc7.3.0

# If undefined in the environment default NDDSHOME to install dir
ifndef NDDSHOME
NDDSHOME := /opt/rti_connext_dds-6.0.1
endif

JAVA_PATH = java
JAVAC_PATH = javac

JAVA_SOURCES = $(SOURCE_DIR)./hu/bme/mit/cps/k8slab/Power.java $(SOURCE_DIR)./hu/bme/mit/cps/k8slab/PowerSeq.java $(SOURCE_DIR)./hu/bme/mit/cps/k8slab/PowerTypeSupport.java $(SOURCE_DIR)./hu/bme/mit/cps/k8slab/PowerTypeCode.java $(SOURCE_DIR)./hu/bme/mit/cps/k8slab/PowerDataReader.java $(SOURCE_DIR)./hu/bme/mit/cps/k8slab/PowerDataWriter.java $(SOURCE_DIR)./hu/bme/mit/cps/k8slab/Voltage.java $(SOURCE_DIR)./hu/bme/mit/cps/k8slab/VoltageSeq.java $(SOURCE_DIR)./hu/bme/mit/cps/k8slab/VoltageTypeSupport.java $(SOURCE_DIR)./hu/bme/mit/cps/k8slab/VoltageTypeCode.java $(SOURCE_DIR)./hu/bme/mit/cps/k8slab/VoltageDataReader.java $(SOURCE_DIR)./hu/bme/mit/cps/k8slab/VoltageDataWriter.java $(SOURCE_DIR)./hu/bme/mit/cps/k8slab/Current.java $(SOURCE_DIR)./hu/bme/mit/cps/k8slab/CurrentSeq.java $(SOURCE_DIR)./hu/bme/mit/cps/k8slab/CurrentTypeSupport.java $(SOURCE_DIR)./hu/bme/mit/cps/k8slab/CurrentTypeCode.java $(SOURCE_DIR)./hu/bme/mit/cps/k8slab/CurrentDataReader.java $(SOURCE_DIR)./hu/bme/mit/cps/k8slab/CurrentDataWriter.java $(SOURCE_DIR)./hu/bme/mit/cps/k8slab/CurrentSubscriber.java $(SOURCE_DIR)./hu/bme/mit/cps/k8slab/CurrentPublisher.java
CLASS_FILES  = $(JAVA_SOURCES:%.java=%.class)

RTI_CLASSPATH := $(NDDSHOME)/lib/java/nddsjava.jar

%.class : %.java
	$(JAVAC_PATH)  -classpath ".:$(RTI_CLASSPATH)" $<

all: $(CLASS_FILES)
 
#
# Convenient way to run the java programs
#

export LD_LIBRARY_PATH := $(NDDSHOME)/lib/x64Linux4gcc7.3.0:/usr/lib/lwp:$(LD_LIBRARY_PATH)

CurrentPublisher: ./hu/bme/mit/cps/k8slab/CurrentPublisher.class
	$(JAVA_PATH)  -classpath ".:$(RTI_CLASSPATH)" hu.bme.mit.cps.k8slab.CurrentPublisher $(ARGS)
 
CurrentSubscriber: ./hu/bme/mit/cps/k8slab/CurrentSubscriber.class
	$(JAVA_PATH)  -classpath ".:$(RTI_CLASSPATH)" hu.bme.mit.cps.k8slab.CurrentSubscriber $(ARGS)
